# Copyright (c) 2022, Arm Limited.
# SPDX-License-Identifier: MIT

%YAML 1.2
---
description: >-
  Builds a device tree from upstream linux kernel and exports the dtb as an
  artifact called DTB. By default, fvp-base-revc.dts is built, but the user can
  override this by specifying its name in the DTS variable as part of a higher
  layer's prebuild commands. Optionally, a kernel command line is dynamically
  added to the chosen node if any params are specified. Uses a slimmed down
  mirror of the upstream repo to avoid having to sync all of linux.

build:
  dt:
    repo:
      remote: git://git.kernel.org/pub/scm/linux/kernel/git/devicetree/devicetree-rebasing.git
      revision: v6.1-dts

    toolchain: aarch64-none-elf-

    prebuild:
      # User can override DTS in prebuild step of higher layer.
      - DTS=fvp-base-revc.dts
      # User can override these to define an initrd in memory.
      - INITRD_START=
      - INITRD_END=

    build:
      - DT_BASENAME=$$(basename $${DTS} .dts)
      - DTB_INTER=src/arm64/arm/$${DT_BASENAME}.dtb
      - DTB_FINAL=${param:builddir}/dt_bootargs.dtb

      # This script compiles the selected dts then dynamically adds kernel
      # bootargs to the chosen node. It uses any defined key=value pairs from
      # the `params` key. If none are defined (the default) the dts is compiled
      # without a command line. If an initrd location is provided, it is also
      # added to the chosen node.
      - make CPP=$${CROSS_COMPILE}cpp -j${param:jobs} $${DTB_INTER}
      - CHOSEN=
      - if [ ! -z "${param:join_equal}" ]; then
      -   CHOSEN="$${CHOSEN}bootargs = \"${param:join_equal}\";\n"
      - fi
      - if [ ! -z "$${INITRD_START}" ] && [ ! -z "$${INITRD_END}" ]; then
      -   INITRD_START_HI=$$((($${INITRD_START} >> 32) & 0xffffffff))
      -   INITRD_START_LO=$$(($${INITRD_START} & 0xffffffff))
      -   INITRD_END_HI=$$((($${INITRD_END} >> 32) & 0xffffffff))
      -   INITRD_END_LO=$$(($${INITRD_END} & 0xffffffff))
      -   CHOSEN="$${CHOSEN}linux,initrd-start = <$${INITRD_START_HI} $${INITRD_START_LO}>;\n"
      -   CHOSEN="$${CHOSEN}linux,initrd-end = <$${INITRD_END_HI} $${INITRD_END_LO}>;\n"
      - fi
      - if [ -z "$${CHOSEN}" ]; then
      -   cp $${DTB_INTER} $${DTB_FINAL}
      - else
      -   ( dtc -q -O dts -I dtb $${DTB_INTER} ; echo -e "/ { chosen { $${CHOSEN} }; };" ) | dtc -q -O dtb -o $${DTB_FINAL}
      - fi

    clean:
      - make CPP=$${CROSS_COMPILE}cpp -j${param:jobs} clean

    artifacts:
      DTB: ${param:builddir}/dt_bootargs.dtb
