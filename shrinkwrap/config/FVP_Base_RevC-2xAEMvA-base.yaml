# Copyright (c) 2022, Arm Limited.
# SPDX-License-Identifier: MIT

%YAML 1.2
---
description: >-
  Arm Architecture Envelope Model FVP configured with 8 CPUs across 2 clusters
  (2x4) and 4GB DRAM.

run:
  name: FVP_Base_RevC-2xAEMvA

  rtvars:
    LOCAL_NET_PORT:
      type: string
      value: 8022

  params:
    # Basic dimensions for RAM and CPU.
    -C bp.dram_size: 4
    -C cluster0.NUM_CORES: 4
    -C cluster1.NUM_CORES: 4
    -C cluster0.PA_SIZE: 48
    -C cluster1.PA_SIZE: 48

    # Architecture level to be implemented by the CPUs. Not all optional
    # features for the extension will be enabled automatically, and on the whole
    # we leave those disabled, since they are usually sensible. However, there
    # are some optional features that are needed for many configs so we manually
    # enable them below. This has not been done entirely scientifically, so if
    # you feel these should change, please get in contact! Implement armv8.6 by
    # default. If you want something different, you can set this key to 0 in an
    # overlay, and add in another key (e.g. has_arm_v9-3=1).
    -C cluster0.has_arm_v8-6: 1
    -C cluster1.has_arm_v8-6: 1

    -C cluster0.ecv_support_level: 2                                  # Implement Enhanced Counter Virtualization feature from ARMv8.6. 2:fully supported with CNTPOFF (FEAT_ECV).
    -C cluster1.ecv_support_level: 2
    -C cluster0.has_amu: 1                                            # Implement activity monitor functionality from ARMv8.4 (FEAT_AMUv1). 1:feature is implemented if ARMv8.4 is enabled.
    -C cluster1.has_amu: 1
    -C cluster0.has_branch_target_exception: 1                        # Implement Branch target identification mechanism from ARMv8.5 (FEAT_BTI). 1:feature is implemented if ARMv8.5 is enabled.
    -C cluster1.has_branch_target_exception: 1
    -C cluster0.has_rndr: 1                                           # Implement random number instructions to read from RNDR and RNDRSS random number registers from ARMv8.5 (FEAT_RNG). 1:feature is implemented if ARMv8.5 is enabled.
    -C cluster1.has_rndr: 1
    -C cluster0.memory_tagging_support_level: 2                       # Specify the memory tagging extension support level: 0, not implemented. 1, instructions and registers only are implemented (FEAT_MTE). 2, implemented (FEAT_MTE2). 3, implemented with asymmetric handling of exceptions
    -C cluster1.memory_tagging_support_level: 2

    --plugin: $$(which ScalableVectorExtension.so)

    # Misc FVP controls.
    --stat: null
    -C bp.vis.disable_visualisation: 1
    -C bp.refcounter.non_arch_start_at_default: 1                     # Firmware is expected to enable the timer at boot time. However, turning this parameter on is a model-specific way of enabling the counter module out of reset.
    -C bp.refcounter.use_real_time: 0                                 # Update the Generic Timer counter at a real-time base frequency instead of simulator time
    -C bp.ve_sysregs.exit_on_shutdown: 1                              # SYS_CFG_SHUTDOWN exits simulation
    -C pctl.startup: 0.0.0.0                                          # Comma-separated list of cores (wildcards allowed) to be powered up at startup or system reset

    # Networking. By default use user-space networking, mapping port 22 in the
    # FVP to a user-specified port on the host (see rtvar:LOCAL_NET_PORT). This
    # enables ssh.
    -C bp.smsc_91c111.enabled: 1
    -C bp.hostbridge.userNetworking: 1
    -C bp.hostbridge.userNetPorts: ${rtvar:LOCAL_NET_PORT}=22

    # FVP Performance tweaks.
    -C cache_state_modelled: 0                                        # Disable d-cache and i-cache state for all components
    -C cluster0.stage12_tlb_size: 1024                                # Increase TLB size from default of 128
    -C cluster1.stage12_tlb_size: 1024
    -C cluster0.check_memory_attributes: 0                            # Disable checking that SW-set memory attributes conform to architecturally required constraints
    -C cluster1.check_memory_attributes: 0

    # What do these mean??
    -C bp.dram_metadata.is_enabled: 1                                 # If false, disables the MetaData controller functionality, and makes the component invisible to passing transactions.
    -C bp.secure_memory: 1
    -C cluster0.gicv3.cpuintf-mmap-access-level: 2                    # Allowed values are: 0-mmap access is supported for GICC,GICH,GICV registers. 1-mmap access is supported only for GICV registers. 2-mmap access is not supported.
    -C cluster1.gicv3.cpuintf-mmap-access-level: 2
    -C cluster0.gicv3.without-DS-support: 1                           # GICv3 CPU interfaces do not support disabling security in the distributor
    -C cluster1.gicv3.without-DS-support: 1
    -C cluster0.gicv4.mask-virtual-interrupt: 1                       # If true, virtual interrupts can be masked from being reported to virtual CPU interface by setting ICH_HCR_EL2.DVIM 1. No control otherwise.
    -C cluster1.gicv4.mask-virtual-interrupt: 1
    -C cluster0.has_v8_7_pmu_extension: 2                             # Implement PMU extension from ARMv8.7 (FEAT_PMUv3p7). (2: feature is implemented.)
    -C cluster1.has_v8_7_pmu_extension: 2

    # These SMMU registers are configuring the arch model with a personality. Features to implement/expose.
    # What is this personality?
    -C pci.pci_smmuv3.mmu.SMMU_AIDR: 2
    -C pci.pci_smmuv3.mmu.SMMU_IDR0: 0x0046123B
    -C pci.pci_smmuv3.mmu.SMMU_IDR1: 0x00600002
    -C pci.pci_smmuv3.mmu.SMMU_IDR3: 0x1714
    -C pci.pci_smmuv3.mmu.SMMU_IDR5: 0xFFFF0475
    -C pci.pci_smmuv3.mmu.SMMU_S_IDR1: 0xA0000002
    -C pci.pci_smmuv3.mmu.SMMU_S_IDR2: 0
    -C pci.pci_smmuv3.mmu.SMMU_S_IDR3: 0
    -C pci.pci_smmuv3.mmu.SMMU_ROOT_IDR0: 3
    -C pci.pci_smmuv3.mmu.SMMU_ROOT_IIDR: 0x43B
    -C pci.pci_smmuv3.mmu.root_register_page_offset: 0x20000

  terminals:
    bp.terminal_0:
      friendly: term0
      port_regex: 'terminal_0: Listening for serial connection on port (\d+)'
      type: stdout

    bp.terminal_1:
      friendly: term1
      port_regex: 'terminal_1: Listening for serial connection on port (\d+)'
      type: stdout

    bp.terminal_2:
      friendly: term2
      port_regex: 'terminal_2: Listening for serial connection on port (\d+)'
      type: stdout

    bp.terminal_3:
      friendly: term3
      port_regex: 'terminal_3: Listening for serial connection on port (\d+)'
      type: stdout
